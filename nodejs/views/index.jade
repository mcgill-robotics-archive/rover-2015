doctype html
html(lang='en')
  head

    //- Compatibility
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    meta(name='viewport', content='width=device-width, initial-scale=1.0, maximum-scale=1.0')
    meta(name='mobile-web-app-capable' content='yes')
    meta(name='apple-mobile-web-app-capable' content='yes')
    meta(name='description', content='Robotics AUV 2015 webpage')

    //- Title
    title= title

    //- Scripts
    link(rel='stylesheet', href='style/style.css', shim-shadowdom)
    script(src='platform/platform.js')
    link(rel='import', href='components/elements/index_elements.html')
    script(src='/socket.io/socket.io.js')
    script(src='http://cdn.robotwebtools.org/EaselJS/current/easeljs.min.js')
    script(src='http://cdn.robotwebtools.org/ros2djs/current/ros2d.min.js')
    script(src='http://cdn.robotwebtools.org/EventEmitter2/current/eventemitter2.min.js')
    script(src='http://cdn.robotwebtools.org/roslibjs/current/roslib.min.js')

    script.
     function init() {
        // Connect to ROS.
        var ros2 = new ROSLIB.Ros({
          url : 'ws://localhost:9090'
        });

        // Create the main viewer.
        var viewer = new ROS2D.Viewer({
          divID : 'libmap',
          width : 600,
          height : 500
        });

        // Setup the map client.
        var gridClient = new ROS2D.OccupancyGridClient({
          ros : ros2,
          rootObject : viewer.scene
        });
        // Scale the canvas to fit to the map
        gridClient.on('change', function(){
          viewer.scaleToDimensions(gridClient.currentGrid.width, gridClient.currentGrid.height);
        });
     } 

  body(onload="init()")
    auv-card
        h3.heading Hello World!
    polymer-ui-card
        h3.heading Hello World!
    auv-card
        h3.heading Hello Polymer!
    polymer-ui-card
        img(src='img/favicon.gif')
    script.
      var socket = io();
    #libmap